using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading.Tasks;
using Beamable.Api.Autogenerated.Content;
using Beamable.Common;
using Beamable.Server;
using UnityEngine;

namespace Microservices.ImageUploadService
{
    [Microservice("ImageUploadService")]
    public class ImageUploadService : Microservice
    {
        [ConfigureServices]
        public static void Configure(IServiceBuilder builder)
        {
            builder.Builder.AddSingleton(p => new HttpClient());
            builder.Builder.AddSingleton<ContentUploader>();
            builder.Builder.AddSingleton<IContentApi, ContentApi>();
        }

        [ClientCallable]
        public async Task<string> UploadImage(string filePath, byte[] image, byte[] md5Byte)
        {
            try
            {
                var contentUploader = Provider.GetService<ContentUploader>();
                var hostedUrl = await contentUploader.UploadLocalImage(filePath, image, md5Byte);
                return hostedUrl;
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
                throw;
            }
        }
    }
}
